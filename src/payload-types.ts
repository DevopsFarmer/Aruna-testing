/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    accounts: Account;
    sites: Site;
    parties: Party;
    reminders: Reminder;
    reports: Report;
    transactions: Transaction;
    media: Media;
    product: Product;
    labour: Labour;
    Mines: Mine;
    truck: Truck;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    accounts: AccountsSelect<false> | AccountsSelect<true>;
    sites: SitesSelect<false> | SitesSelect<true>;
    parties: PartiesSelect<false> | PartiesSelect<true>;
    reminders: RemindersSelect<false> | RemindersSelect<true>;
    reports: ReportsSelect<false> | ReportsSelect<true>;
    transactions: TransactionsSelect<false> | TransactionsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    product: ProductSelect<false> | ProductSelect<true>;
    labour: LabourSelect<false> | LabourSelect<true>;
    Mines: MinesSelect<false> | MinesSelect<true>;
    truck: TruckSelect<false> | TruckSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  phone?: string | null;
  role: 'owner' | 'client' | 'sites-visitor';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accounts".
 */
export interface Account {
  id: string;
  name: string;
  type?: ('clinet' | 'vendor') | null;
  site?: (string | null) | Site;
  party?: (string | null) | Party;
  opening_balance?: number | null;
  current_balance?: number | null;
  is_locked?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sites".
 */
export interface Site {
  id: string;
  site_name: string;
  location?: string | null;
  is_closed?: boolean | null;
  start_date?: string | null;
  end_date?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "parties".
 */
export interface Party {
  id: string;
  name: string;
  category?: ('block_supplier' | 'labour_contractor' | 'other') | null;
  contact_person?: string | null;
  phone?: string | null;
  pan_number?: string | null;
  gst?: string | null;
  address?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reminders".
 */
export interface Reminder {
  id: string;
  user?: (string | null) | User;
  message?: string | null;
  due_date?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports".
 */
export interface Report {
  id: string;
  generated_by?: (string | null) | User;
  type?: string | null;
  filters?: string | null;
  created_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions".
 */
export interface Transaction {
  id: string;
  account: string | Account;
  type?: ('credit' | 'debit') | null;
  amount?: number | null;
  mode?: ('cash' | 'upi' | 'bank' | 'cheque') | null;
  description?: string | null;
  txn_date?: string | null;
  document?: (string | null) | Media;
  entered_by?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product".
 */
export interface Product {
  id: string;
  vender_id?: (string | null) | Account;
  date?: string | null;
  bill?: string | null;
  mainType: 'Stone' | 'Block';
  stoneOptions?: {
    subType?: ('khanda' | 'raskat') | null;
  };
  blockOptions?: {
    subType?: ('brown' | 'white') | null;
  };
  addforward?:
    | {
        l?: number | null;
        w?: number | null;
        h?: number | null;
        qty?: number | null;
        labour?: (string | null) | Labour;
        id?: string | null;
      }[]
    | null;
  statement?: {
    bill?: string | null;
    date?: string | null;
    thodi?:
      | {
          thodi?: string | null;
          id?: string | null;
        }[]
      | null;
    hydra?: (string | null) | Truck;
    quantity?: string | null;
    total_amount?: string | null;
  };
  total_quantity?: number | null;
  issued_quantity?: number | null;
  left_quantity?: number | null;
  final_total?: number | null;
  partyRemainingPayment?: number | null;
  partyAdvancePayment?: number | null;
  transportType?: ('Hydra' | 'Truck') | null;
  createdBy?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "labour".
 */
export interface Labour {
  id: string;
  name?: string | null;
  mobile?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "truck".
 */
export interface Truck {
  id: string;
  driver_name: string;
  phone?: string | null;
  truck_no?: string | null;
  truck_cost?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Mines".
 */
export interface Mine {
  id: string;
  Mines_name: string;
  address?: string | null;
  GST?: string | null;
  phone?:
    | {
        number?: string | null;
        id?: string | null;
      }[]
    | null;
  mail_id?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'accounts';
        value: string | Account;
      } | null)
    | ({
        relationTo: 'sites';
        value: string | Site;
      } | null)
    | ({
        relationTo: 'parties';
        value: string | Party;
      } | null)
    | ({
        relationTo: 'reminders';
        value: string | Reminder;
      } | null)
    | ({
        relationTo: 'reports';
        value: string | Report;
      } | null)
    | ({
        relationTo: 'transactions';
        value: string | Transaction;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'product';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'labour';
        value: string | Labour;
      } | null)
    | ({
        relationTo: 'Mines';
        value: string | Mine;
      } | null)
    | ({
        relationTo: 'truck';
        value: string | Truck;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  phone?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "accounts_select".
 */
export interface AccountsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  site?: T;
  party?: T;
  opening_balance?: T;
  current_balance?: T;
  is_locked?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sites_select".
 */
export interface SitesSelect<T extends boolean = true> {
  site_name?: T;
  location?: T;
  is_closed?: T;
  start_date?: T;
  end_date?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "parties_select".
 */
export interface PartiesSelect<T extends boolean = true> {
  name?: T;
  category?: T;
  contact_person?: T;
  phone?: T;
  pan_number?: T;
  gst?: T;
  address?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reminders_select".
 */
export interface RemindersSelect<T extends boolean = true> {
  user?: T;
  message?: T;
  due_date?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reports_select".
 */
export interface ReportsSelect<T extends boolean = true> {
  generated_by?: T;
  type?: T;
  filters?: T;
  created_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transactions_select".
 */
export interface TransactionsSelect<T extends boolean = true> {
  account?: T;
  type?: T;
  amount?: T;
  mode?: T;
  description?: T;
  txn_date?: T;
  document?: T;
  entered_by?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_select".
 */
export interface ProductSelect<T extends boolean = true> {
  vender_id?: T;
  date?: T;
  bill?: T;
  mainType?: T;
  stoneOptions?:
    | T
    | {
        subType?: T;
      };
  blockOptions?:
    | T
    | {
        subType?: T;
      };
  addforward?:
    | T
    | {
        l?: T;
        w?: T;
        h?: T;
        qty?: T;
        labour?: T;
        id?: T;
      };
  statement?:
    | T
    | {
        bill?: T;
        date?: T;
        thodi?:
          | T
          | {
              thodi?: T;
              id?: T;
            };
        hydra?: T;
        quantity?: T;
        total_amount?: T;
      };
  total_quantity?: T;
  issued_quantity?: T;
  left_quantity?: T;
  final_total?: T;
  partyRemainingPayment?: T;
  partyAdvancePayment?: T;
  transportType?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "labour_select".
 */
export interface LabourSelect<T extends boolean = true> {
  name?: T;
  mobile?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Mines_select".
 */
export interface MinesSelect<T extends boolean = true> {
  Mines_name?: T;
  address?: T;
  GST?: T;
  phone?:
    | T
    | {
        number?: T;
        id?: T;
      };
  mail_id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "truck_select".
 */
export interface TruckSelect<T extends boolean = true> {
  driver_name?: T;
  phone?: T;
  truck_no?: T;
  truck_cost?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}